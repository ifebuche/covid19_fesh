from pip._internal.distributions.base import AbstractDistribution
<<<<<<< HEAD
from pip._internal.index.package_finder import PackageFinder
from pip._internal.metadata import BaseDistribution
=======
from pip._internal.utils.typing import MYPY_CHECK_RUNNING

if MYPY_CHECK_RUNNING:
    from typing import Optional

    from pip._vendor.pkg_resources import Distribution
    from pip._internal.index.package_finder import PackageFinder
>>>>>>> 27dd9875f98c51b82553091a9dbcf027191524ef


class InstalledDistribution(AbstractDistribution):
    """Represents an installed package.

    This does not need any preparation as the required information has already
    been computed.
    """

<<<<<<< HEAD
    def get_metadata_distribution(self) -> BaseDistribution:
        assert self.req.satisfied_by is not None, "not actually installed"
        return self.req.satisfied_by

    def prepare_distribution_metadata(
        self, finder: PackageFinder, build_isolation: bool
    ) -> None:
=======
    def get_pkg_resources_distribution(self):
        # type: () -> Optional[Distribution]
        return self.req.satisfied_by

    def prepare_distribution_metadata(self, finder, build_isolation):
        # type: (PackageFinder, bool) -> None
>>>>>>> 27dd9875f98c51b82553091a9dbcf027191524ef
        pass
